# This template creates only the necessary certificate resources
# without attempting to modify existing Ingress resources

---
# Certificate Issuer
apiVersion: cert-manager.io/v1
kind: {{ .Values.issuer.type }}
metadata:
  name: {{ .Values.issuer.name }}
  labels:
    helm.sh/chart: {{ include "cert-deployment.chart" . }}
    app.kubernetes.io/name: {{ include "cert-deployment.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Chart.AppVersion }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    {{- end }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  acme:
    {{- if .Values.issuer.production }}
    server: https://acme-v02.api.letsencrypt.org/directory
    {{- else }}
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    {{- end }}
    email: {{ .Values.issuer.email }}
    privateKeySecretRef:
      name: {{ .Values.issuer.name }}-account-key
    solvers:
    {{- with .Values.issuer.solvers }}
    {{- toYaml . | nindent 4 }}
    {{- end }}

---
# ACME HTTP-01 Challenge IngressRoute
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: {{ include "cert-deployment.fullname" . }}-acme-challenge
  labels:
    helm.sh/chart: {{ include "cert-deployment.chart" . }}
    app.kubernetes.io/name: {{ include "cert-deployment.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Chart.AppVersion }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    {{- end }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  entryPoints:
    - web
  routes:
    - match: PathPrefix(`/.well-known/acme-challenge/`)
      kind: Rule
      priority: 100
      services:
        - name: {{ include "cert-deployment.fullname" . }}-acme-svc
          port: 8089

---
# ACME Challenge Service
apiVersion: v1
kind: Service
metadata:
  name: {{ include "cert-deployment.fullname" . }}-acme-svc
  labels:
    helm.sh/chart: {{ include "cert-deployment.chart" . }}
    app.kubernetes.io/name: {{ include "cert-deployment.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Chart.AppVersion }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    {{- end }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  type: ClusterIP
  ports:
    - port: 8089
      targetPort: 8089
      protocol: TCP
  selector:
    acme.cert-manager.io/http01-solver: "true"

{{- range .Values.certificates }}
---
# Certificate
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .name }}
  labels:
    helm.sh/chart: {{ include "cert-deployment.chart" $ }}
    app.kubernetes.io/name: {{ include "cert-deployment.name" $ }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    {{- if $.Chart.AppVersion }}
    app.kubernetes.io/version: {{ $.Chart.AppVersion | quote }}
    {{- end }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    {{- with .labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  secretName: {{ .secretName }}
  duration: {{ .duration }}
  renewBefore: {{ .renewBefore }}
  dnsNames:
    {{- range .domains }}
    - {{ . }}
    {{- end }}
  issuerRef:
    name: {{ $.Values.issuer.name }}
    kind: {{ $.Values.issuer.type }}
{{- end }} 